% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pareto.R
\name{rpareto}
\alias{Dpareto}
\alias{dpareto}
\alias{ppareto}
\alias{qpareto}
\alias{rpareto}
\title{The Pareto Distribution}
\usage{
rpareto(n = 1, scale = 1, shape = 1)

ppareto(x, scale = 1, shape = 1)

dpareto(x, scale = 1, shape = 1)

Dpareto(x, d, scale = 1, shape = 1)

qpareto(p, scale = 1, shape = 1)
}
\arguments{
\item{n}{Number of observations. If length(n) > 1, the length is taken
to be the number required. Default value is 1}

\item{scale, shape}{Positive real values respectively defining the shape and scale
parameter of the Pareto distributon. Default value is 1 for both of them}

\item{x, q}{Vector of quantiles}

\item{d}{An non-negative integer giving the order of the derivative}

\item{p}{vector of probabilities}
}
\value{
\code{dpareto} gives the density, \code{ppareto} gives the distribution function,
\code{Dpareto} gives the distribution function derivative, \code{qpareto} gives the quantile
function, and \code{rpareto} generates random observations.
}
\description{
Density, distribution function, distribution function derivatives, quantile function
and random generation for the Pareto distribution function with shape \code{shape} and
scale \code{scale}.
}
\details{
The Pareto distribution has the following cumultative distribution function
\deqn{F(x) = 1 - (x/scale)^(-\alpha)} for all x > scale
}
\examples{
# Simulate a pareto sample
n <- 1e2 ; scale <- 1 ; shape <- 1
set.seed(100) ; X <- sort(rpareto(n, scale , shape))

# Compare the ECDF and the distribution function
plot(X, ecdf(X)(X))
lines(X,ppareto(X,shape,scale) , col = "red")

# Compare kernel density and density function
with(density(X, from = min(X)), plot(x, y))
lines(X,dpareto(X,shape,scale), col = "red")

# Visualize the distribution derivatives for 0 <= d <= 3
D <- 0:3

derivatives <- sapply(D, function(d) Dpareto(X,d,scale, shape))
dataPlot <- data.frame(
             x = rep(X,length(D)),
             y = c(derivatives),
             D = rep(paste0("d = ",D ), each = length(X))
             )

library(ggplot2)
ggplot(dataPlot, aes(x = x, y = y)) +
geom_line() +
facet_grid(D~., scales = "free_y")
}

